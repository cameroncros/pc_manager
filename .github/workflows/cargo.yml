name: Test

on:
  push:
    branches:
      - '**'
      - '!main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    name: Test Commit
    timeout-minutes: 30

    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install prereqs
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install python3 python3-pip python3-venv python3-wheel

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build
        run: cargo build --release

      - name: Test
        run: cargo test

      - name: Integration
        run: integration/run.sh

      - name: Package
        if: matrix.os == 'ubuntu-latest'
        run: |
          cargo install cargo-deb
          cargo deb

      - name: Package
        if: matrix.os == 'windows-latest'
        run: |
          cargo install cargo-wix
          cargo wix -I install/package.wxs

      - uses: actions/upload-artifact@master
        if: matrix.os == 'windows-latest'
        with:
          name: pc_manager.msi
          path: build/*.msi
      - uses: actions/upload-artifact@master
        if: matrix.os == 'ubuntu-latest'
        with:
          name: pc_manager.deb
          path: build/*.deb
      - uses: actions/upload-artifact@master
        if: matrix.os == 'ubuntu-latest'
        with:
          name: PKGBUILD
          path: build/PKGBUILD

  release-dev:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') != true && github.ref != 'refs/heads/dev'
    steps:
      - name: Get the branch
        id: get_branch
        run: echo ::set-output name=BRANCH::${GITHUB_REF#refs/heads/}

      - uses: actions/download-artifact@master
        with:
          name: pc_manager.msi
          path: ./
      - uses: actions/download-artifact@master
        with:
          name: pc_manager.deb
          path: ./
      - uses: actions/download-artifact@master
        with:
          name: PKGBUILD
          path: ./

      - name: Release
        id: create_dev_release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          name: "Development Build - ${{ steps.get_branch.outputs.BRANCH }}"
          files: |
            ./*

  release-to-master:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Remove keys
        run: |
          rm /home/runner/.ssh -rfv
          git clone https://${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/cameroncros/pc_manager.git .
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"
          ./release.sh
          git push --follow-tags

  release-actual:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Get the tag
        id: get_tag
        run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}

      - uses: actions/download-artifact@master
        with:
          name: pc_manager.msi
          path: ./
      - uses: actions/download-artifact@master
        with:
          name: pc_manager.deb
          path: ./
      - uses: actions/download-artifact@master
        with:
          name: PKGBUILD
          path: ./

      - name: Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          tag_name: ${{ github.ref }}
          name: "Release - ${{ steps.get_tag.outputs.TAG }}"
          draft: false
          prerelease: false
          files: |
            ./*
